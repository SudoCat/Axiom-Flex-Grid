// Generate Wrappers
@mixin ag-wrappers {
  [data-grid] {
    display: flex;
    flex-wrap: wrap;
    flex-grow: 1;
    margin-left: auto;
    margin-right: auto;
  }

  [data-grid~=wrap] {
    max-width: ag-conf(max-width);
    padding-left: ag-conf(gutters);
    padding-right: ag-conf(gutters);
  }

  [data-grid~=row] {
    flex: 1 0 100%;
    margin: 0 ( ag-conf(gutters) * -0.5 );
  }

  [data-grid*=nowrap] {
    flex-wrap: nowrap;
  }
}

// Generate Grid Wrapper Alignments
@mixin ag-alignments {
  [data-grid*=align-center] {
    align-items: center;
  }

  [data-grid*=align-start] {
    align-items: flex-start;
  }

  [data-grid*=align-end] {
    align-items: flex-end;
  }

  [data-grid*=justify-center] {
    justify-content: center;
  }

  [data-grid*=justify-start] {
    justify-content: flex-start;
  }

  [data-grid*=justify-end] {
    justify-content: flex-end;
  }

  [data-grid*=justify-between] {
    justify-content: space-between;
  }

  [data-grid*=justify-around] {
    justify-content: space-around;
  }
}

// Generate Cell Defaults
@mixin ag-cells {
  [data-cell] {
    flex-grow: 0;
    padding-left: (ag-conf(gutters) * 0.5);
    padding-right: (ag-conf(gutters) * 0.5);
  }

  [data-cell*="nest"] {
    padding-left: 0;
    padding-right: 0;
  }

  [data-cell*="grow"] {
    flex-grow: 1;
  }
}

// Generate Cell Sizes
@mixin ag-sizes($columns: ag-conf(columns), $full: true) {
  $length: if( $full, $columns, $columns - 1 );
  @for $i from 1 through $length {
    $fraction: ag-fraction($i, $columns);
    $percent: percentage($i/$columns);

    [data-cell~="#{$fraction}"] {
      flex-basis: $percent;
    }

    @if ( ag-conf(ie-support) == true ) {
      @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        [data-cell~="#{$fraction}"] {
          max-width: $percent;
        }
      }
    }

    @each $size in map-keys(ag-conf(breakpoints)) {
      @include ag-bp($size, $i) {
        [data-cell~="#{$fraction}@#{$size}"] {
          flex-basis: $percent;
        }

        @if ( ag-conf(ie-support) == true ) {
          @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
            [data-cell~="#{$fraction}@#{$size}"] {
              max-width: $percent;
            }
          }
        }
      }
    }
  }
}

// Generate Grid Selectors
@mixin ag-grid($grid: ag-conf()) {
  @include ag-wrappers;

  @if ( ag-conf(include-alignment) ) {
    @include ag-alignments;
  }

  @include ag-cells;
  @include ag-sizes;

  @if ( ag-conf(include-fiths) ) {
    @include ag-sizes(5, false);
  }
}
