// Generate Responsive Cells
@mixin ag-cell-sizes($columns: ag-conf(columns), $full: true, $responsive: ag-conf(responsive)) {
  $length: if( $full, $columns, $columns - 1);

  // Loop through breakpoints
  @each $size in map-keys($responsive) {
    @if ( $full ) {
      @include ag-cell-auto($size, $responsive);
    }

    @for $column from 1 through $length {
      $fraction: ag-fraction($column, $columns);
      $percent: percentage($column/$columns);
      $selector: if($size == '*', $fraction, "#{$fraction}@#{$size}");

      @include ag-bp-cell($column, $size, $responsive) {
        @include ag-cell-size($selector, $percent);
      }
    }
  }
}

@mixin ag-cell-auto($size, $responsive: ag-conf(responsive)) {
  $selector: if($size == '*', 'auto', 'auto@#{$size}');
  @include ag-bp($size, $responsive) {
    [data-cell~="#{$selector}"] {
      flex-basis: auto;
    }
  }
}

// Generate Cell Sizes
@mixin ag-cell-size($selector, $percent) {
  [data-cell~="#{$selector}"] {
    flex-basis: $percent;
  }

  @if ( ag-conf(ie-support) == true) {
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      [data-cell~="#{$selector}"] {
        max-width: $percent;
      }
    }
  }
}

// Generate Cell Attributes
@mixin ag-cell-attributes {
  [data-cell*="nest"] {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }

  [data-cell*="grow"] {
    flex-grow: 1;
  }
}
